package be.dekleinekobini.tornapi.models.user;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import java.time.LocalDateTime;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

class HonorsTest {

    @Test
    void of() throws JsonProcessingException {
        // Arrange
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode json = objectMapper.readTree("{\"honors_awarded\":[1,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,55,56,57,60,61,63,64,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,157,159,161,162,163,164,212,215,216,217,220,221,222,226,227,228,229,230,232,233,234,236,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,266,267,268,269,270,271,272,273,274,277,281,283,284,288,297,298,308,309,313,315,316,317,318,322,326,327,338,367,371,375,395,398,406,414,418,427,431,437,443,459,475,477,478,481,488,497,500,505,506,513,515,517,519,520,521,525,534,537,541,542,543,544,546,548,549,552,566,567,571,572,581,601,605,606,607,608,615,617,627,629,631,635,636,639,640,641,643,646,651,653,656,659,665,670,678,679,686,687,694,700,708,716,717,719,720,721,723,729,730,731,734,739,740,742,743,763,781,791,793,800,827,828,838,839,843,844,845,846,853,860,863,870,871,873,882,888,896,902,903,906,916,942,943,944,945,951,955,964,969,1001,1002,1004,1007],\"honors_time\":[1536365631,1551268956,1601366806,1574253436,1558651738,1563101582,1614983287,1540859391,1528549915,1526237590,1585941368,1526487532,1552376677,1610801200,1526213054,1620108352,1524697899,1562771267,1564389418,1614271885,1528589663,1528830423,1537090617,1530292645,1533770106,1537449262,1554397807,1574345810,1571314771,1569742858,1544182324,1530643863,1540570916,1524334752,1524517397,1525765532,1526678145,1529884869,1530644174,1532215120,1547804292,1565310036,1575642453,1593127352,1627557846,1566971455,1579596119,1604678689,1614581874,1540421598,1596035577,1629916642,1551971126,1614670927,1529262841,1625996510,1625468139,1559465561,1584888002,1529584393,1530090456,1531766559,1528820677,1536914013,1532198601,1531297559,1530771867,1530642627,1531304597,1530465426,1530467775,1533160950,1607190307,1559724996,1589701880,1533237776,1623400017,1577549608,1591643024,1548371060,1601366806,1537938286,1619451326,1609730724,1534540801,1629495088,1604766805,1554654055,1537938286,1548548711,1610800586,1572989405,1527917774,1603284824,1527114727,1539076883,1580151496,1604488928,1527624750,1550756597,1556270269,1552381681,1554220937,1578677312,1537871610,1551081990,1532008147,1608924258,1631817909,1559219188,1600968542,1526856364,1525599006,1526856364,1530314836,1526856364,1614983287,1549648362,1563006995,1615459977,1528803592,1530554593,1606003774,1533123625,1528924597,1533695583,1578229384,1605599730,1556212093,1530824553,1556212087,1596011899,1606306350,1587817881,1587817879,1545696026,1600845581,1632392566,1605629881,1568196331,1606306346,1579105990,1535198715,1530883921,1526465629,1529429248,1525080426,1577838459,1528147995,1545440206,1529746006,1603897156,1530910486,1527198207,1526460200,1530503249,1540956579,1542240890,1543925224,1541694317,1547943790,1531846168,1575728746,1563824168,1578394694,1563372348,1581434616,1543429459,1543680789,1543938110,1555153385,1551195961,1564177429,1611947846,1530880905,1530040066,1553601869,1559473162,1568734007,1620108352,1567147726,1620108352,1528828127,1555984015,1583221656,1552985242,1575990962,1568156524,1599589026,1565334428,1563878856,1550608787,1549184496,1605687824,1530231223,1539090814,1565292380,1601845685,1575751802,1573301556,1593064022,1543679898,1577581045,1597764091,1563372351,1581238964,1576850355,1541523387,1636279653,1552376378,1556461062,1594058146,1553612171,1572294329,1536717750,1529510682,1542973849,1618759005,1557760480,1553612186,1553612098,1625933279,1534266478,1599552911,1538491433,1569393252,1569393256,1581669463,1569670565,1563895400,1593246516,1631359661,1574373301,1575617376,1580650453,1600158582,1593197350,1593196825,1597091526,1605732699,1592997284,1617256546,1588603833,1588686593,1591218013,1605448137,1591092511,1593705293,1600872353,1600872334,1595420638,1607583882,1594134123,1594996923,1596555563,1600931965,1598362254,1599570991,1604168654,1601384664,1606138691,1603310504,1601384688,1605627323,1602596657,1604268127,1603834639,1606834850,1606834850,1606834850,1618315610]}");

        // Act
        List<Honors> honors = Honors.of(json);

        // Assert
        Honors watchingYou = new Honors();
        watchingYou.setId(1);
        watchingYou.setAwarded(LocalDateTime.of(2018,9,8,0,13,51));

        Honors killStreak500 = new Honors();
        killStreak500.setId(17);
        killStreak500.setAwarded(LocalDateTime.of(2021,1,16,12,46,40));

        assertThat(honors)
                .hasSize(271)
                .contains(watchingYou, killStreak500);
    }

}